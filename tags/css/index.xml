<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSS on Hudson Worden</title><link>https://hworden.github.io/tags/css/</link><description>Recent content in CSS on Hudson Worden</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 17 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hworden.github.io/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>Building Poker Part 2</title><link>https://hworden.github.io/posts/building-poker-2/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://hworden.github.io/posts/building-poker-2/</guid><description>Introduction In my previous post my next goal was to implement state management into the app thus far. Previously, I was using hard coded values scattered within various files and it was quickly becoming difficult to manage.
Enter Redux React projects typically use React Redux for state management. React Redux is the official React binding library for Redux. Redux in it of itself is a library for state management.</description></item><item><title>Building Poker Part 1</title><link>https://hworden.github.io/posts/building-poker-1/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://hworden.github.io/posts/building-poker-1/</guid><description>Introduction Ever since COVID, people have been looking for new ways to interact with one another in socially distant ways. There has been an emergence of social games that can be played in the browser, with the User Experience centered around Zoom / Video Calling. Two examples of this are Jack Box and Codenames. The end goal is to basically make a similar experience, but for Poker.</description></item></channel></rss>